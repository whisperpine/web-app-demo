# 此文件用于部署, 开发时请使用工程根目录的 compose.yaml

services:
  web-app-demo:
    # 使用已经上传 Docker Hub 中的镜像
    image: whisperpine/web-app-demo:latest
    # 如果意外停止则自动重启
    restart: always
    ports:
      # 将宿主系统的 80 端口与容器实例的 3000 端口绑定
      - 80:3000
    environment:
      # 设置环境变量, 用于访问 MongoDB 容器实例
      MONGODB_URI: mongodb://mongo:27017/
    # 将容器实例内的 /publish 路径设置为工作路径
    working_dir: /publish
    # 容器实例启动时在工作路径执行命令
    command: dotnet WebAppDemo.dll

  mongo:
    # 使用 MongoDB 官方镜像
    image: mongo:6.0
    # 如果意外停止则自动重启
    restart: always
    volumes:
      # 将宿主系统中名为 mongo-data-db 的 volume 映射到容器的 /data/db 路径中
      # mongo 所存储的数据应该被映射到容器外部, 这样才能持久化存储
      - mongo-data-db:/data/db
      # 将宿主系统中名为 mongo-config-db 的 volume 映射到容器的 /data/configdb 路径中
      - mongo-config-db:/data/configdb

volumes:
  # 在宿主系统中创建名为 mongo-data-db 的 volume, 存放数据库的数据
  mongo-data-db: {}
  # 在宿主系统中创建名为 mongo-config-db 的 volume, 存放数据库的配置
  mongo-config-db: {}
